version: '3.7'
services:
  # faasd:
  #   build:
  #     context: ./faasd
  #   container_name: faasd
  #   ports:
  #     - 8080:8080

  mlflow:
    image: ghcr.io/mlflow/mlflow
    container_name: mlflow
    command: mlflow ui --host=0.0.0.0
    ports:
      - 8091:5000
    #volumes:
    # - ${DATA_VOLUME}/mlflow:

  directus:
    image: directus/directus:latest
    container_name: directus
    command: 
      - sh
      - -c
      - >
        npm i directus-extension-computed-interface 
        directus-extension-board-layout 
        directus-extension-api-trigger-interface 
        directus-extension-vgrid-interface;
        mkdir -p /directus/extensions/modules/api-viewer && wget -O /directus/extensions/modules/api-viewer/index.js "https://github.com/u12206050/directus-extension-api-viewer-module/releases/download/1.1.1/index.js";
        mkdir -p /directus/extensions/modules/generate-types && wget -O /directus/extensions/modules/generate-types/index.js "https://github.com/maltejur/directus-extension-generate-types/releases/download/0.4.1/index.js";
        npx directus bootstrap && npx directus start
    # wget "https://github.com/maltejur/directus-extension-generate-types/releases/download/0.4.1/index.js" /directus/extensions/modules/generate-types/index.js &&
    ports:
      - 8090:8055
    volumes:
      - ${DATA_VOLUME}/directus/uploads:/directus/uploads
      - ${DATA_VOLUME}/directus/database:/directus/database  # sqlite
      # - ${DATA_VOLUME}/extensions:/directus/extensions  # https://docs.directus.io/extensions/introduction/
    environment:
      TZ: "$TZ"
      KEY: "$KEY"
      SECRET: "$SECRET"

      DB_CLIENT: pg
      DB_HOST: db
      DB_PORT: "5432"
      DB_DATABASE: postgres
      DB_USER: $ADMIN_USER
      DB_PASSWORD: $ADMIN_PASS
      ADMIN_EMAIL: $ADMIN_EMAIL
      ADMIN_PASSWORD: $ADMIN_PASS
      # PUBLIC_URL: "https://sensor-meta.${DOMAIN}"

      STORAGE_LOCATIONS: s3
      STORAGE_S3_DRIVER: s3
      STORAGE_S3_KEY: $ADMIN_USER
      STORAGE_S3_SECRET: $ADMIN_PASS
      STORAGE_S3_BUCKET: "directus"
      STORAGE_S3_ENDPOINT: 'http://minio:9000'
      STORAGE_S3_S3_FORCE_PATH_STYLE: 'true'
    restart: always

  db:
    container_name: postgres
    image: postgis/postgis:13-master
    volumes:
      - ${DATA_VOLUME}/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: $ADMIN_USER
      POSTGRES_PASSWORD: $ADMIN_PASS
      POSTGRES_DB: postgres

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${DATA_VOLUME}/minio:/data
    environment:
      MINIO_ROOT_USER: $ADMIN_USER
      MINIO_ROOT_PASSWORD: $ADMIN_PASS
    command: server --console-address ":9001" /data
  
  redisstreamer:
    build: redis-streamer
    container_name: redis-streamer
    ports:
     - 8000:8000
    #volumes:
    #  - ./redis_streamer:/src/redis_streamer
    environment:
      REDIS_URL: redis://redis:6379
      DISABLE_MULTI_DEVICE_PREFIXING: "1"
    #depends_on:
    #  - redis
    restart: unless-stopped

  # redis:
  #   image: redis:7
  #   container_name: redis
  #   restart: unless-stopped
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./redis/redis_6789.conf:/usr/local/etc/redis/redis.conf
  #   environment:
  #     ALLOW_EMPTY_PASSWORD: 'yes'
  #   healthcheck:
  #     test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
  #     interval: 1s
  #     timeout: 3s
  #     retries: 5

networks:
  default:
    name: ptg
    external: true
  web:
    external: true
    name: web

